name: ORCA CI
on:
  push:
    # Prevent duplicate jobs on Dependabot PRs that interfere with automerge.
    branches-ignore:
      - 'dependabot/**'
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ORCA_SUT_NAME: acquia/blt
      ORCA_SUT_BRANCH: main
      ORCA_VERSION: ${{ matrix.orca-version }}
      ORCA_PHPCS_STANDARD: AcquiaDrupalStrict
      BLT_PRINT_COMMAND_OUTPUT: 1
      ORCA_JOB: ${{ matrix.orca-job }}
      ORCA_PACKAGES_CONFIG_ALTER: ../blt/tests/packages_alter.yml
    strategy:
      matrix:
        orca-job:
          - STATIC_CODE_ANALYSIS
          - INTEGRATED_TEST_ON_OLDEST_SUPPORTED
          - INTEGRATED_TEST_ON_LATEST_LTS
        php-version: [ "8.3" ]
        coveralls-enable: [ "FALSE" ]
        orca-version: [ "^4" ]
        include:
          - orca-job: INTEGRATED_TEST_ON_OLDEST_SUPPORTED
            php-version: "8.1"
            coveralls-enable: "FALSE"

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 12.x

      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          coverage: xdebug2

      - name: Before install
        run: |
          composer create-project --no-dev acquia/orca ../orca "$ORCA_VERSION"
          ../orca/bin/ci/before_install.sh

      - name: Install
        run: ../orca/bin/ci/install.sh

      - name: Before script
        run: ../orca/bin/ci/before_script.sh

      - name: Script
        run: ../orca/bin/ci/script.sh

      - name: After script
        run: ../orca/bin/ci/after_script.sh

      - name: After success
        if: ${{ success() }}
        run: ../orca/bin/ci/after_success.sh

      - name: After failure
        if: ${{ failure() }}
        run: ../orca/bin/ci/after_failure.sh

  all-successful:
    if: always()
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
      - name: All checks successful
        run: echo "ðŸŽ‰"
